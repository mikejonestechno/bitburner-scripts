// import { functionName, functionName2 } from "./utils.js"
// RAM 1.70 GB (base, hack)

/* hack: Minimal hack-only script, repeat hack x times
 * syntax: hack.js target numIterations
 */

/** @param {NS} ns **/
export async function main(ns) {

    const target = ns.args[0];
    var numIterations = ns.args[1];
    if (numIterations == undefined) {
        numIterations = 1;
    }

    for(let i=1;i<=numIterations;i++){
        
        var start = performance.now()
        
        var hackMoney = await ns.hack(target);
        
        ns.printf(`hack: %s: %s %s`, target, ns.nFormat(hackMoney,"$0.00"), ns.tFormat(performance.now() - start));
        
        if(i < numIterations) {
            // Small delay to allow any parallel threads to finish so next iteration get max hack chance
            await ns.sleep(100);
        } 
    }

}

export function autocomplete(data, args) {
    return data.servers;
}