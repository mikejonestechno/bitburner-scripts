// import { functionName, functionName2 } from "./utils.js"
// RAM 2.25 GB (base, scan, nuke, scp)

/* worm:  Nuke and copy files to targets.
 * syntax: worm.js 
 *
 * A worm is a type of malware that automatically spreads without human intervention.
  */

/** @param {NS} ns **/
export async function main(ns) {

    // Scan for servers (0.2 GB)
    // Future update will perform recursive scan to burrow 5 levels deeper.
    // Worm just 1 level deep for now.
    const servers = ns.scan(); 

    // Get malware files (0.2 GB)
    // Always copy all files for now.
    const files = ns.ls("home", "/malware/");    
  
    // How many port crack tools do I have
    // Just infect servers that have 0 open ports required for now
    const portCracks = 0; 

    var startScript = performance.now();

    for (const hostname of servers) {
        var start = performance.now();

        // Check required open ports (0.1 GB)
        const portsRequired = ns.getServerNumPortsRequired(hostname);
        if(portsRequired > portCracks) {
            ns.printf(`worm: FAIL: Cannot infect %s: Requires %d open ports.`, hostname, portsRequired);       
            break;
        }

        // Check root access (0.05 GB) otherwise error / crash if already nuked
        //if (!ns.hasRootAccess(hostname)) {
            // Get root access (0.05 GB)
            ns.nuke(hostname);
        //}

        // Secure copy protocol (0.6 GB)
        ns.scp(files, hostname);

        ns.printf(`worm: SUCCESS: Infected %s: %.2f milliseconds`, hostname, performance.now() - start);       
    };
    ns.printf(`worm: Completed in %s`, ns.tFormat(performance.now() - startScript));       

}