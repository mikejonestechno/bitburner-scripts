// import { functionName, functionName2 } from "./utils.js"
// RAM 1.75 GB (base, grow)

/* weaken: Minimal grow-only script, repeat hack x times
 * syntax: weaken.js target numIterations
 */

/** @param {NS} ns **/
export async function main(ns) {

    const target = ns.args[0];
    var numIterations = ns.args[1];
    if (numIterations == undefined) {
        numIterations = 1;
    }

    for(let i=1;i<=numIterations;i++){
        
        var start = performance.now()
        
        // The runtime for this function depends on 
        // your hacking level and the target serverâ€™s security level 
        // when this function is called.

        // each hack increases security by 0.002.
        // each grow increases security by 0.004.
        // each weaken lowers security by 0.05.
        // it requires 20 x weakens to lower security by 1.00
        // 1 weaken : 25 hacks
        // 1 weaken : 12.5 grows
        // To maintain current security, do 1 weaken every successful 25 hacks 
        // and 12.5 grows.

        // weaken time / 4 = hack time.
        // weaken time / 1.25 = grow time. 
        
        await ns.weaken(target);
        
        ns.printf(`Weaken %s: %d milliseconds`, target, performance.now() - start);
        
        if(i < numIterations) {
            // Small delay to allow any parallel threads to finish so next iteration get max chance
            await ns.sleep(100);
        } 
    }

}

export function autocomplete(data, args) {
    return data.servers;
}